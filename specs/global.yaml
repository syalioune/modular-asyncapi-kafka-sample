asyncapi: '2.5.0'
id: 'urn:fr:eda:kafka:sample'
info:
  title: Sample Kafka EDA description
  version: 0.0.1
  description: >
    TODO
servers:
  dev-ssl:
    $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/servers/kafka-dev.yaml'
defaultContentType: application/vnd.apache.avro
channels:
  pro01.XXX.demandePaiement.pub:
    $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/channels/demandePaiement-publish.yaml'
  pro01.XXX.demandePaiement.sub:
    $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/channels/demandePaiement-subscribe.yaml'
  pro01.XXX.paymentMethod.pub:
    $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/channels/paymentMethod-publish.yaml'
  pro01.XXX.paymentMethod.sub:
    $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/channels/paymentMethod-subscribe.yaml'
components:
  messages:
    demandePaiement:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/messages/demandePaiement.yaml'
    paymentMethod:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/messages/paymentMethod.yaml'
  schemas:
    demandePaiement:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/schemas/demandePaiement.yaml'
    person:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/schemas/person.yaml'
    amount:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/schemas/amount.yaml'
    paymentMethod:
      $ref: 'https://raw.githubusercontent.com/syalioune/modular-asyncapi-kafka-sample/main/components/schemas/paymentMethod.yaml'
  securitySchemes:
    keycloak:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://keycloak/auth
          scopes:
            kafka: Custom scope to access Kafka
